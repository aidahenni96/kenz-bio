generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Product {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String
  createdAt   DateTime       @default(now())
  orderItems  OrderProduct[]
  cartItems   CartProduct[] // relation inverse vers CartProduct
  category    Category?      @relation(fields: [categoryId], references: [id])
  categoryId  Int?
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  isAdmin  Boolean @default(false)
  orders   Order[]
  cart     Cart? // relation inverse vers Cart (un user peut avoir un panier)
}

model Order {
  id        Int            @id @default(autoincrement())
  user      User           @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime       @default(now())
  products  OrderProduct[]
  total     Float
}

model OrderProduct {
  id        Int     @id @default(autoincrement())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model Cart {
  id        Int           @id @default(autoincrement())
  user      User          @relation(fields: [userId], references: [id])
  userId    Int           @unique
  cartItems CartProduct[]
  createdAt DateTime      @default(now())
}

model CartProduct {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id])
  cartId    Int
  product   Product @relation(fields: [productId], references: [id])
  productId Int
  quantity  Int
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[] // relation inverse vers Product
}
